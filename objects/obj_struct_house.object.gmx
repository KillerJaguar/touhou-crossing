<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_struct_house</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>obj_struct_base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

owner = -1;

occupancy = 0;
occupancy_max = 2;

for (var i = 0; i &lt; occupancy_max; i++)
{
    occupant[i] = noone;
    occupant_active[i] = false;
    occupant_leaving[i] = false;
}

entrance = struct_create_entrance(x - tile_size, bbox_bottom, tile_size, tile_size);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (owner != -1)
{
    ui_ticker_post(npc_get_name(owner) + " has been evicted");
    npc_set_home(owner, -1);
}

with (entrance) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not struct_house_exit(id, 1))
    alarm[0] = irandom_range(10, 30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not struct_house_exit(id, 0))
    alarm[0] = irandom_range(10, 30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i = 0; i &lt; occupancy_max; i++)
{
    if (occupant[i] == noone or not occupant_active[i]) continue;
    
    var is_leaving = occupant_leaving[i];
    
    with (occupant[i])
    {
        var fade_rate = -0.15;
        if (is_leaving) fade_rate = -fade_rate;
        image_alpha = clamp(image_alpha + fade_rate, 0, 1);
        
        var has_entered = image_alpha == 0;
        var has_left = image_alpha == 1;
        
        if (has_entered)
        {
            other.alarm[i] = irandom_range(10, 30) * room_speed;
            other.occupant_active[i] = false;
            instance_deactivate_object(id);
        }
        else if (has_left)
        {
            other.occupant[i] = noone;
            other.occupancy--;
            npc_think(id);
        }
        
        can_direct = has_left;
        can_think = has_left;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not struct_house_show_info(id)) exit;

var scale = 0.5;
var buffer = 2;

draw_set_font(global.font_dialogue);

var str = "Empty House";
if (owner != -1)
{
    if (owner == npc.player)
        str = player_get_name();
    else
        str = npc_get_name(owner);
        
    str += "'s House";
}

var w = string_width(str) * scale;
var h = string_height(str) * scale;

draw_set_color(c_orange);
draw_roundrect(x - w / 2 - buffer, y - h / 2 - buffer, x + w / 2 + buffer, y + h / 2 + buffer, false);

draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text_transformed(x, y, str, scale, scale, 0);

var w = 16 * occupancy + 4 * occupancy, n = 0;
for (var i = 0; i &lt; occupancy_max; i++)
{
    if (occupant[i] == noone) continue;
    draw_sprite(npc_get_icon(occupant[n].npc_id), 0, x - w / 2 + n * 16 + n * 4 + 8, y - 14);
    n++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
