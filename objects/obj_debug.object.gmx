<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-100000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_grid = false;
show_collisions = false;
show_paths = false;
show_overlay = false;

// markup text unit test

var teststr = "The [color=red][b]quick[/b][/color] brown [i]fox[/i] jumps [color=orange]over[/color] the [color=aqua]lazy[/color] dog.";
show_debug_message(string(string_length(teststr)));

mu = mutext(teststr);
show_debug_message(mu);
show_debug_message(string(mutext_length(mu)));
show_debug_message(mutext_string(mu));

surf = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible = global.debug;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not surface_exists(surf))
{
    surf = surface_create(512, 512);
    surface_set_target(surf);
    draw_clear_alpha(c_black,0);
        draw_set_color(c_black);
        draw_set_font(global.font_dialogue);
        mutext_draw(0, 0, mu);
    surface_reset_target();
}

draw_surface(surf, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_f1))
    show_grid = not show_grid;
    
if (keyboard_check_pressed(vk_f2))
    show_collisions = not show_collisions;
    
if (keyboard_check_pressed(vk_f3))
    show_paths = not show_paths
    
if (keyboard_check_pressed(vk_f4))
    show_overlay = not show_overlay;
    
show_debug_overlay(show_overlay);
    
mp_grid_clear_all(global.mp_grid);
mp_grid_add_instances(global.mp_grid, obj_collision, false);
    
if (show_grid)
{
    draw_set_alpha(0.25);
    mp_grid_draw(global.mp_grid);
    draw_set_alpha(1);
}

if (show_collisions)
{
    draw_set_alpha(0.50)
    draw_set_color(c_blue)
    
    with (obj_collision)
    {
        draw_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, true);
    }
    
    with (obj_struct_entrance)
    {
        draw_set_color(c_purple);
        draw_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, true);
    }
    
    with (obj_player)
    {
        var xx = x + lengthdir_x(interact_dist, direction);
        var yy = y + lengthdir_y(interact_dist, direction);
        
        draw_set_color(c_red);
        draw_line(x, y, xx, yy);
    }
    
    draw_set_color(c_white);
    draw_set_alpha(1)
}

if (show_paths)
{
    with (obj_npc) draw_path(path, x, y, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inventory_add_item(item_get("test"));
inventory_add_item(item_get("test1"));
inventory_add_item(item_get("test2"));
inventory_add_item(item_get("test3"));
inventory_add_item(item_get("test4"));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
