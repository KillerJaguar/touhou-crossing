<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>build_mode = false;

village_width = room_width div tile_size;
village_height = room_height div tile_size;

road_grid = ds_grid_create(village_width, village_height);
road_depth = 999999;

ds_grid_clear(road_grid, false);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize road tile variables

// refer to "Road Diagram.png" in included files for explanation of values

enum road
{
    nw  = 5,     // north-west
    n   = 7,     // north
    ne  = 6,     // north-east
    w   = 13,    // west
    c   = 15,    // center
    e   = 14,    // east
    sw  = 9,     // south-west
    s   = 11,    // south
    se  = 10,    // south-east
    vw  = 1,     // vertical west
    vc  = 12,     // vertical center
    ve  = 2,     // vertical east
    hn  = 4,     // horizontal north
    hc  = 3,    // horizontal center
    hs  = 8,     // horizontal south
    st  = 0,     // stand-alone
    
    // special case tiles
    
    ine = 16,    // interior north-east
    inw = 17,    // interior north-west
    isw = 18,    // interior south-west
    ise = 19,    // interior south-east
}

tile_top[road.nw]   = 0;
tile_left[road.nw]  = 0;

tile_top[road.n]    = 0;
tile_left[road.n]   = 16;

tile_top[road.ne]   = 0;
tile_left[road.ne]  = 32;

tile_top[road.w]    = 16;
tile_left[road.w]   = 0;

tile_top[road.c]    = 16;
tile_left[road.c]   = 16;

tile_top[road.e]    = 16;
tile_left[road.e]   = 32;

tile_top[road.sw]   = 32;
tile_left[road.sw]  = 0;

tile_top[road.s]    = 32;
tile_left[road.s]   = 16;

tile_top[road.se]   = 32;
tile_left[road.se]  = 32;

tile_top[road.vw]   = 32;
tile_left[road.vw]  = 48;

tile_top[road.vc]   = 16;
tile_left[road.vc]  = 96;

tile_top[road.ve]   = 32;
tile_left[road.ve]  = 80;

tile_top[road.hn]   = 0;
tile_left[road.hn]  = 96;

tile_top[road.hc]   = 32;
tile_left[road.hc]  = 64;

tile_top[road.hs]   = 32;
tile_left[road.hs]  = 96;

tile_top[road.st]   = 0;
tile_left[road.st]  = 80;

tile_top[road.ine]  = 16;
tile_left[road.ine] = 48;

tile_top[road.inw]  = 16;
tile_left[road.inw] = 64;

tile_top[road.isw]  = 0;
tile_left[road.isw] = 64;

tile_top[road.ise]  = 0;
tile_left[road.ise] = 48;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_grid_destroy(road_grid);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// DEBUG toggle build mode with C
if (input_check_pressed(input.c))
{
    build_mode = not build_mode;
    
    if (build_mode)
    {
        // EVENT build_mode_enter
    
        place_x = obj_player.x div tile_size;
        place_y = obj_player.y div tile_size;
        
        // store player's position
        player_x = obj_player.x;
        player_y = obj_player.y;
        
        global.player_input = false;
    }
    else
    {
        // EVENT build_mode_exit
    
        // restore player's position
        // NOTE what if a building is built on top of them?
        obj_player.x = player_x;
        obj_player.y = player_y;
        
        global.player_input = true;
        
        ui_display_money(false);
    }
}

visible = build_mode;
obj_player.visible = not build_mode;
    
if (build_mode) 
{
    ui_display_money(true);

    // move placement object and keep within room bounds
        
    var move_x = input_check_pressed(input.right) - input_check_pressed(input.left);
    var move_y = input_check_pressed(input.down) - input_check_pressed(input.up);

    // TODO take into account target object size    
    //var width = sprite_get_width(object_get_sprite(place_obj)) div tile_size - 1;
    //var height = sprite_get_height(object_get_sprite(place_obj)) div tile_size - 1;
    
    place_x = clamp(place_x + move_x, 0, village_width-1);
    place_y = clamp(place_y + move_y, 0, village_height-1);
    
    var xx = place_x * tile_size;
    var yy = place_y * tile_size;
    
    obj_player.x = xx;
    obj_player.y = yy;
    
    // TODO check if valid
    
    // DEBUG place road
    if (input_check_pressed(input.a))
    {
        // EVENT build_mode_place
        road_grid[#place_x,place_y] = not road_grid[#place_x,place_y];
        event_user(3);
        
        global.money -= 50;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update roads

tile_layer_delete(road_depth);

for (var i = 0; i &lt; village_width; i++)
    for (var j = 0; j &lt; village_height; j++)
    {
        if (not road_grid[#i,j])
            continue;
    
        var has_n = j != 0 and road_grid[#i,j-1];
        var has_w = i != 0 and road_grid[#i-1,j];
        var has_s = j != village_height-1 and road_grid[#i,j+1];
        var has_e = i != village_width-1 and road_grid[#i+1,j];
        
        var type = has_n*8 + has_s*4 + has_w*2 + has_e;
        
        // TODO handle special case tiles
        
        var top  = tile_top[type];
        var left = tile_left[type];
        
        tile_add(tile_road, left, top, 16, 16, i*16, j*16, road_depth);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xx = place_x * tile_size;
var yy = place_y * tile_size;

draw_background_part_ext(tile_road, 16, 16, 16, 16, xx, yy, 1, 1, c_white, 0.60);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
