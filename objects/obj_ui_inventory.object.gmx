<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ui_inventory</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ui_base</parentName>
  <maskName>spr_ui_inventory_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

x = 320 / 2;
y = 240 / 2;

// TODO load a 32x32 pattern to use as background
bg = bg_default_pattern;
bg_x = 0;
bg_y = 0;
bg_speed = 32 * 0.40 / room_speed;

surface = undefined;

instance_create(48, 34, obj_ui_inventory_name);
instance_create(35, 18, obj_ui_inventory_town);
instance_create(94, 65, obj_ui_inventory_money);
instance_create(133, 22, obj_ui_inventory_character);

for (var i = 0; i &lt; 15; i++)
{
    var col = i mod 5;
    var row = floor(i / 5);

    var xx = 7 + 32 * col + 16 * row;
    var yy = 94 + 24 * row;

    with (instance_create(xx, yy, obj_ui_inventory_item))
        slot = i;
}

for (var i = 0; i &lt; 10; i++)
{
    var col = i mod 2;
    var row = floor(i / 2);
    
    var xx = 200 + 24 * col;
    var yy = 39 + 24 * row;
    
    with (instance_create(xx, yy, obj_ui_inventory_letter))
        slot = i;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (not surface_exists(surface))
    surface = surface_create(512, 512);
    
surface_set_target(surface);
{
    bg_x = (bg_x + bg_speed) mod 32;
    bg_y = bg_x;

    draw_clear(c_white);
    draw_enable_alphablend(false);
    draw_sprite(mask_index, 0, sprite_get_xoffset(mask_index), sprite_get_yoffset(mask_index)); 
    
    draw_enable_alphablend(true);
    draw_set_blend_mode_ext(bm_dest_color, bm_zero);
    draw_background_tiled(bg, -bg_x, -bg_y);
    draw_set_blend_mode(bm_normal);
}
surface_reset_target();

draw_surface_part(surface, 0, 0, sprite_get_width(sprite_index), sprite_get_height(sprite_index), x - sprite_get_xoffset(sprite_index), y - sprite_get_yoffset(sprite_index));

draw_set_blend_mode_ext(bm_src_color, bm_dest_alpha);
draw_self();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
