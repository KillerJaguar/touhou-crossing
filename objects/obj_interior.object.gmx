<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>interior_width = 11;
interior_height = 6;

place_active = false;
place_obj = -1;
place_valid = false;
place_x = 0;
place_y = 0;

// TEST

test_furn[1] = obj_interior_table;
test_furn[0] = obj_interior_chair;

test_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not place_active)
{
    global.player_input = true;
    global.ui_clock.can_show = true;
    
    obj_player.visible = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Placement mode (only if active)

// TEST enable placement mode
if (not place_active and input_check_pressed(input.c))
    event_user(0);

else if (place_active)
{
    ui_display_money(true);

    // DEBUG switch test object
    if (input_check_pressed(input.d))
    {
        test_index = (test_index + 1) mod 2;
        place_obj = test_furn[test_index];
    }

    // move placement object and keep within room bounds
    
    var move_x = input_check_pressed(input.right) - input_check_pressed(input.left);
    var move_y = input_check_pressed(input.down) - input_check_pressed(input.up);
    
    var width = sprite_get_width(object_get_sprite(place_obj)) div tile_size;
    var height = sprite_get_height(object_get_sprite(place_obj)) div tile_size;

    place_x = clamp(place_x + move_x, 0, interior_width-width);    
    place_y = clamp(place_y + move_y, 0, interior_height-height);
    
    var xx = place_x * tile_size;
    var yy = (place_y + 2) * tile_size;
    
    // place object
    if (input_check_pressed(input.a))
    {
        global.money -= 500;
        instance_create(xx, yy, place_obj);
    }

    // cancel placement mode   
    place_active = not (input_check_pressed(input.a) or input_check_pressed(input.c));
    
    // check position is valid
    
    width *= tile_size;
    height *= tile_size;
    
    place_valid = (collision_rectangle(xx, yy, xx+width-1, yy+height-1, obj_collision, false, true) == noone)
        and rectangle_in_rectangle(xx, yy, xx+width-1, yy+height-1, 48, 96, 95, 127) == 0;
}

visible = place_active;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Activate placement mode

test_index = 0;

place_active = true;
place_obj = test_furn[test_index];
place_x = 0;
place_y = 0;

global.player_input = false;
global.ui_clock.can_show = false;

// reposition the player to the entrance
obj_player.direction = 90;
obj_player.visible = false;
obj_player.x = obj_interior_exit.x + tile_size/2;
obj_player.y = obj_interior_exit.y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var sprite = object_get_sprite(place_obj);
var color = c_white;

if (not place_valid)
    color = c_red;

var xx = place_x * tile_size;
var yy = (place_y + 2) * tile_size;
    
draw_sprite_ext(sprite, 0, xx, yy, 1, 1, 0, color, 0.75);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
