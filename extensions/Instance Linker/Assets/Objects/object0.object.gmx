<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_test_part</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var N = 10 ;
for(var i = 0 ; i &lt; N ; i++)
    {
    Part[i] = instance_create(-32,-32,obj_part) ;
    }

Link[0] = linker_tree_create() ;
Link[1] = linker_leaf_add(Link[0],32,32,Part[0]) ;
Link[2] = linker_leaf_add(Link[0],-32,32,Part[1]) ;
Link[3] = linker_leaf_add(Link[1],0,32,Part[2]) ;
Link[4] = linker_leaf_add(Link[2],0,32,Part[3]) ;
Link[5] = linker_leaf_add(Link[3],-32,0,Part[4]) ;
Link[6] = linker_leaf_add(Link[3],32,0,Part[5]) ;

Link[7] = linker_leaf_add(Link[0],-32,-32,Part[6]) ;
Link[8] = linker_leaf_add(Link[0],32,-32,Part[7]) ;
Link[9] = linker_leaf_add(Link[7],0,-32,Part[8]) ;
Link[10] = linker_leaf_add(Link[8],0,-32,Part[9]) ;


linker_tree_paint_colour(Link[0],c_blue) ;
linker_tree_paint_colour(Link[1],c_red) ;
linker_tree_paint_colour(Link[2],c_red) ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_angle += (keyboard_check(vk_right) - keyboard_check(vk_left))*4 ;

var Speed = (keyboard_check(vk_down)  - keyboard_check(vk_up))*4 ;
x += lengthdir_x(Speed,image_angle) ;
y += lengthdir_y(Speed,image_angle) ;

linker_leaves_snap(Link) ;

if (keyboard_check(vk_space))
    {
    linker_leaf_remove(Link[0],Link[1]) ;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>linker_tree_trigger_event(Link,ev_alarm,0) ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_large) ;
draw_self() ;
draw_circle(x,y,8,false) ;

draw_text(16,32,"You can move using the arrow Keys") ;
draw_text(16,64,"Press SPACE to remove Link[1] from Link[0]") ;

draw_text(16,room_height-64,"These instances move together as one!") ;
draw_text(room_width/2,128,"It's Easy to Add or Remove Leaves") ;
draw_text(room_width/2,160,"Each Leaf can be used as a Tree") ;
draw_text(room_width/2,192,"Each Link does not need to touch") ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>screen_save("LinkScreenshot.png") ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
